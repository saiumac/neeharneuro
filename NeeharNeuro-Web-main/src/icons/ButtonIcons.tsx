import * as React from 'react';

export const MoreVerticalIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    xmlns="http://www.w3.org/2000/svg"
    width={20}
    height={20}
    fill="none"
    {...props}
  >
    <path
      fill="#58595B"
      d="M10 5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM10 11.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM10 17.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"
    />
  </svg>
  );
};

export const XcircleIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    xmlns="http://www.w3.org/2000/svg"
    width={24}
    height={24}
    fill="none"
    {...props}
  >
    <path
      stroke="#060622"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10ZM15 9l-6 6M9 9l6 6"
    />
  </svg>
  );
};
export const TrashIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    xmlns="http://www.w3.org/2000/svg"
    width={16}
    height={16}
    fill="none"
    {...props}
  >
    <path
      stroke="#EA4D4D"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      d="M10.667 4v-.533c0-.747 0-1.12-.146-1.406a1.333 1.333 0 0 0-.582-.582c-.286-.146-.659-.146-1.406-.146H7.467c-.747 0-1.12 0-1.406.146-.25.128-.455.331-.582.582-.146.286-.146.659-.146 1.406V4m1.334 3.667V11m2.666-3.333V11M2 4h12m-1.333 0v7.467c0 1.12 0 1.68-.218 2.108a2 2 0 0 1-.874.874c-.428.218-.988.218-2.108.218H6.533c-1.12 0-1.68 0-2.108-.218a2 2 0 0 1-.874-.874c-.218-.428-.218-.988-.218-2.108V4"
    />
  </svg>
  );
};
export const EditIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    width={16}
    height={16}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g clipPath="url(#clip0_751_15284)">
      <path
        d="M7.33337 2.66666H2.66671C2.31309 2.66666 1.97395 2.80713 1.7239 3.05718C1.47385 3.30723 1.33337 3.64637 1.33337 3.99999V13.3333C1.33337 13.6869 1.47385 14.0261 1.7239 14.2761C1.97395 14.5262 2.31309 14.6667 2.66671 14.6667H12C12.3537 14.6667 12.6928 14.5262 12.9428 14.2761C13.1929 14.0261 13.3334 13.6869 13.3334 13.3333V8.66666"
        stroke="#58595B"
        strokeWidth={1.5}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M12.3334 1.66665C12.5986 1.40144 12.9583 1.25244 13.3334 1.25244C13.7084 1.25244 14.0682 1.40144 14.3334 1.66665C14.5986 1.93187 14.7476 2.29158 14.7476 2.66665C14.7476 3.04173 14.5986 3.40144 14.3334 3.66665L8.00004 9.99999L5.33337 10.6667L6.00004 7.99999L12.3334 1.66665Z"
        stroke="#58595B"
        strokeWidth={1.5}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
    <defs>
      <clipPath id="clip0_751_15284">
        <rect width={16} height={16} fill="white" />
      </clipPath>
    </defs>
  </svg>
  );
};
export const DuolicateIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    xmlns="http://www.w3.org/2000/svg"
    width={16}
    height={16}
    fill="none"
    {...props}
  >
    <path
      fill="#58595B"
      fillRule="evenodd"
      d="M2.254 2.254c.11-.11.258-.17.413-.17h6a.583.583 0 0 1 .583.583v.666a.75.75 0 0 0 1.5 0v-.666A2.083 2.083 0 0 0 8.667.583h-6A2.083 2.083 0 0 0 .583 2.667v6a2.083 2.083 0 0 0 2.084 2.083h.667a.75.75 0 0 0 0-1.5h-.667a.583.583 0 0 1-.583-.583v-6c0-.155.061-.303.17-.413Zm4.496 5.08c0-.323.261-.584.583-.584h6c.322 0 .584.261.584.583v6a.583.583 0 0 1-.584.584h-6a.583.583 0 0 1-.583-.584v-6Zm.583-2.084c-1.15 0-2.083.933-2.083 2.083v6c0 1.15.933 2.084 2.083 2.084h6c1.15 0 2.084-.933 2.084-2.084v-6c0-1.15-.933-2.083-2.084-2.083h-6Z"
      clipRule="evenodd"
    />
  </svg>
  );
};
export const PlusWhiteIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    xmlns="http://www.w3.org/2000/svg"
    width={20}
    height={20}
    fill="none"
    {...props}
  >
    <path
      stroke="#fff"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      d="M10 4.167v11.666M4.167 10h11.666"
    />
  </svg>
  );
};
export const DuplicateIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    width={16}
    height={16}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g clipPath="url(#clip0_691_11673)">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M2.25435 2.25411C2.36375 2.14471 2.51212 2.08325 2.66683 2.08325H8.66683C8.82154 2.08325 8.96991 2.14471 9.07931 2.25411C9.18871 2.3635 9.25016 2.51188 9.25016 2.66659V3.33325C9.25016 3.74747 9.58595 4.08325 10.0002 4.08325C10.4144 4.08325 10.7502 3.74747 10.7502 3.33325V2.66659C10.7502 2.11405 10.5307 1.58415 10.14 1.19345C9.74927 0.802745 9.21936 0.583252 8.66683 0.583252H2.66683C2.1143 0.583252 1.58439 0.802745 1.19369 1.19345C0.802989 1.58415 0.583496 2.11405 0.583496 2.66659V8.66659C0.583496 9.21912 0.802989 9.74902 1.19369 10.1397C1.58439 10.5304 2.11429 10.7499 2.66683 10.7499H3.3335C3.74771 10.7499 4.0835 10.4141 4.0835 9.99992C4.0835 9.58571 3.74771 9.24992 3.3335 9.24992H2.66683C2.51212 9.24992 2.36375 9.18846 2.25435 9.07906C2.14495 8.96967 2.0835 8.82129 2.0835 8.66659V2.66659C2.0835 2.51188 2.14495 2.3635 2.25435 2.25411ZM6.75 7.33327C6.75 7.01111 7.01117 6.74994 7.33333 6.74994H13.3333C13.6555 6.74994 13.9167 7.01111 13.9167 7.33327V13.3333C13.9167 13.6554 13.6555 13.9166 13.3333 13.9166H7.33333C7.01117 13.9166 6.75 13.6554 6.75 13.3333V7.33327ZM7.33333 5.24994C6.18274 5.24994 5.25 6.18268 5.25 7.33327V13.3333C5.25 14.4839 6.18274 15.4166 7.33333 15.4166H13.3333C14.4839 15.4166 15.4167 14.4839 15.4167 13.3333V7.33327C15.4167 6.18268 14.4839 5.24994 13.3333 5.24994H7.33333Z"
        fill="#58595B"
      />
    </g>
    <defs>
      <clipPath id="clip0_691_11673">
        <rect width={16} height={16} fill="white" />
      </clipPath>
    </defs>
  </svg>
  );
};
export const ClockIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    xmlns="http://www.w3.org/2000/svg"
    width={14}
    height={15}
    fill="none"
    {...props}
  >
    <g
      stroke="#58595B"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      clipPath="url(#a)"
    >
      <path d="M7 13.333A5.833 5.833 0 1 0 7 1.666a5.833 5.833 0 0 0 0 11.667Z" />
      <path d="M7 4v3.5l2.333 1.167" />
    </g>
    <defs>
      <clipPath id="a">
        <path fill="#fff" d="M0 .5h14v14H0z" />
      </clipPath>
    </defs>
  </svg>
  );
};
export const NotificationIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    width={16}
    height={16}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g clipPath="url(#clip0_1515_168879)">
      <path
        d="M15.0357 9.10649L13.769 4.54916C13.3977 3.21405 12.5908 2.04135 11.4766 1.21747C10.3623 0.393593 9.00462 -0.0341842 7.61932 0.00213589C6.23402 0.038456 4.90062 0.536789 3.83105 1.41792C2.76149 2.29906 2.01715 3.51243 1.71634 4.86516L0.735678 9.27516C0.627355 9.76245 0.629859 10.2678 0.743007 10.754C0.856154 11.2402 1.07705 11.6948 1.3894 12.0842C1.70174 12.4736 2.09756 12.7879 2.54762 13.0038C2.99768 13.2197 3.49049 13.3318 3.98968 13.3318H4.73234C4.88535 14.0854 5.29416 14.7628 5.88951 15.2494C6.48485 15.736 7.23011 16.0018 7.99901 16.0018C8.76792 16.0018 9.51318 15.736 10.1085 15.2494C10.7039 14.7628 11.1127 14.0854 11.2657 13.3318H11.8243C12.3382 13.3319 12.8451 13.2131 13.3055 12.9848C13.7659 12.7565 14.1672 12.4248 14.4782 12.0157C14.7892 11.6066 15.0014 11.1312 15.0982 10.6265C15.195 10.1218 15.1739 9.60162 15.0363 9.10649H15.0357ZM7.99901 14.6652C7.58684 14.6634 7.18526 14.5344 6.84921 14.2958C6.51317 14.0571 6.25907 13.7204 6.12168 13.3318H9.87634C9.73896 13.7204 9.48486 14.0571 9.14881 14.2958C8.81277 14.5344 8.41119 14.6634 7.99901 14.6652ZM13.4163 11.2085C13.2306 11.4549 12.9899 11.6547 12.7134 11.7918C12.4369 11.9289 12.1323 11.9997 11.8237 11.9985H3.98968C3.6902 11.9984 3.39456 11.9311 3.12457 11.8015C2.85459 11.672 2.61715 11.4834 2.42979 11.2498C2.24242 11.0161 2.10992 10.7434 2.04205 10.4517C1.97419 10.16 1.97269 9.85683 2.03768 9.56449L3.01768 5.15382C3.25391 4.0913 3.83855 3.13823 4.67865 2.44612C5.51875 1.75402 6.56609 1.36261 7.65419 1.3341C8.74229 1.3056 9.8087 1.64164 10.6839 2.2888C11.5591 2.93597 12.1928 3.85712 12.4843 4.90582L13.751 9.46316C13.8347 9.76007 13.848 10.0724 13.7899 10.3754C13.7319 10.6783 13.6039 10.9636 13.4163 11.2085Z"
        fill="#727987"
      />
    </g>
    <defs>
      <clipPath id="clip0_1515_168879">
        <rect width={16} height={16} fill="white" />
      </clipPath>
    </defs>
  </svg>
  );
};
export const ListCardIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    width={12}
    height={12}
    viewBox="0 0 12 12"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M1.53746 0.166992C0.79529 0.166992 0.166626 0.795662 0.166626 1.53783V4.16283C0.166626 4.90501 0.79529 5.53367 1.53746 5.53367H4.16246C4.90465 5.53367 5.53331 4.90501 5.53331 4.16283V1.53783C5.53331 0.795662 4.90465 0.166992 4.16246 0.166992H1.53746ZM1.33329 1.53783C1.33329 1.43999 1.43962 1.33366 1.53746 1.33366H4.16246C4.2603 1.33366 4.36663 1.43999 4.36663 1.53783V4.16283C4.36663 4.26066 4.2603 4.36699 4.16246 4.36699H1.53746C1.43962 4.36699 1.33329 4.26066 1.33329 4.16283V1.53783Z"
      fill="#8699BD"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M7.83751 0.166992C7.09533 0.166992 6.46667 0.795662 6.46667 1.53783V4.16283C6.46667 4.90501 7.09533 5.53367 7.83751 5.53367H10.4625C11.2047 5.53367 11.8333 4.90501 11.8333 4.16283V1.53783C11.8333 0.795662 11.2047 0.166992 10.4625 0.166992H7.83751ZM7.63334 1.53783C7.63334 1.43999 7.73968 1.33366 7.83751 1.33366H10.4625C10.5603 1.33366 10.6667 1.43999 10.6667 1.53783V4.16283C10.6667 4.26066 10.5603 4.36699 10.4625 4.36699H7.83751C7.73968 4.36699 7.63334 4.26066 7.63334 4.16283V1.53783Z"
      fill="#8699BD"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M0.166626 7.83763C0.166626 7.09546 0.79529 6.4668 1.53746 6.4668H4.16246C4.90465 6.4668 5.53331 7.09546 5.53331 7.83763V10.4626C5.53331 11.2048 4.90465 11.8335 4.16246 11.8335H1.53746C0.79529 11.8335 0.166626 11.2048 0.166626 10.4626V7.83763ZM1.53746 7.63346C1.43962 7.63346 1.33329 7.73981 1.33329 7.83763V10.4626C1.33329 10.5605 1.43962 10.6668 1.53746 10.6668H4.16246C4.2603 10.6668 4.36663 10.5605 4.36663 10.4626V7.83763C4.36663 7.73981 4.2603 7.63346 4.16246 7.63346H1.53746Z"
      fill="#8699BD"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M7.83751 6.4668C7.09533 6.4668 6.46667 7.09546 6.46667 7.83763V10.4626C6.46667 11.2048 7.09533 11.8335 7.83751 11.8335H10.4625C11.2047 11.8335 11.8333 11.2048 11.8333 10.4626V7.83763C11.8333 7.09546 11.2047 6.4668 10.4625 6.4668H7.83751ZM7.63334 7.83763C7.63334 7.73981 7.73968 7.63346 7.83751 7.63346H10.4625C10.5603 7.63346 10.6667 7.73981 10.6667 7.83763V10.4626C10.6667 10.5605 10.5603 10.6668 10.4625 10.6668H7.83751C7.73968 10.6668 7.63334 10.5605 7.63334 10.4626V7.83763Z"
      fill="#8699BD"
    />
  </svg>
  );
};
export const ListTableIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    width={12}
    height={12}
    viewBox="0 0 12 12"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M10.2 5.39961H1.8C1.32261 5.39961 0.864773 5.20997 0.527208 4.8724C0.189642 4.53484 0 4.077 0 3.59961V2.39961C0 1.92222 0.189642 1.46438 0.527208 1.12682C0.864773 0.789252 1.32261 0.599609 1.8 0.599609H10.2C10.6774 0.599609 11.1352 0.789252 11.4728 1.12682C11.8104 1.46438 12 1.92222 12 2.39961V3.59961C12 4.077 11.8104 4.53484 11.4728 4.8724C11.1352 5.20997 10.6774 5.39961 10.2 5.39961ZM1.8 1.79961C1.64087 1.79961 1.48826 1.86282 1.37574 1.97535C1.26321 2.08787 1.2 2.24048 1.2 2.39961V3.59961C1.2 3.75874 1.26321 3.91135 1.37574 4.02387C1.48826 4.13639 1.64087 4.19961 1.8 4.19961H10.2C10.3591 4.19961 10.5117 4.13639 10.6243 4.02387C10.7368 3.91135 10.8 3.75874 10.8 3.59961V2.39961C10.8 2.24048 10.7368 2.08787 10.6243 1.97535C10.5117 1.86282 10.3591 1.79961 10.2 1.79961H1.8Z"
      fill="#3D98F8"
    />
    <path
      d="M10.2 11.3996H1.8C1.32261 11.3996 0.864773 11.21 0.527208 10.8724C0.189642 10.5348 0 10.077 0 9.59961V8.39961C0 7.92222 0.189642 7.46438 0.527208 7.12682C0.864773 6.78925 1.32261 6.59961 1.8 6.59961H10.2C10.6774 6.59961 11.1352 6.78925 11.4728 7.12682C11.8104 7.46438 12 7.92222 12 8.39961V9.59961C12 10.077 11.8104 10.5348 11.4728 10.8724C11.1352 11.21 10.6774 11.3996 10.2 11.3996ZM1.8 7.79961C1.64087 7.79961 1.48826 7.86282 1.37574 7.97535C1.26321 8.08787 1.2 8.24048 1.2 8.39961V9.59961C1.2 9.75874 1.26321 9.91135 1.37574 10.0239C1.48826 10.1364 1.64087 10.1996 1.8 10.1996H10.2C10.3591 10.1996 10.5117 10.1364 10.6243 10.0239C10.7368 9.91135 10.8 9.75874 10.8 9.59961V8.39961C10.8 8.24048 10.7368 8.08787 10.6243 7.97535C10.5117 7.86282 10.3591 7.79961 10.2 7.79961H1.8Z"
      fill="#3D98F8"
    />
  </svg>
  );
};
export const CalendarIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    width={20}
    height={20}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M6.56 11.2463C6.80814 11.2463 7.04612 11.1477 7.22159 10.9722C7.39705 10.7967 7.49563 10.5588 7.49563 10.3106C7.49563 10.0625 7.39705 9.8245 7.22159 9.64904C7.04612 9.47357 6.80814 9.375 6.56 9.375C6.31186 9.375 6.07388 9.47357 5.89841 9.64904C5.72295 9.8245 5.62437 10.0625 5.62437 10.3106C5.62437 10.5588 5.72295 10.7967 5.89841 10.9722C6.07388 11.1477 6.31186 11.2463 6.56 11.2463ZM7.49625 13.4362C7.49625 13.6844 7.39768 13.9224 7.22221 14.0978C7.04675 14.2733 6.80877 14.3719 6.56063 14.3719C6.31248 14.3719 6.0745 14.2733 5.89904 14.0978C5.72357 13.9224 5.625 13.6844 5.625 13.4362C5.625 13.1881 5.72357 12.9501 5.89904 12.7747C6.0745 12.5992 6.31248 12.5006 6.56063 12.5006C6.80877 12.5006 7.04675 12.5992 7.22221 12.7747C7.39768 12.9501 7.49625 13.1881 7.49625 13.4362ZM10 11.2463C10.2481 11.2463 10.4861 11.1477 10.6616 10.9722C10.8371 10.7967 10.9356 10.5588 10.9356 10.3106C10.9356 10.0625 10.8371 9.8245 10.6616 9.64904C10.4861 9.47357 10.2481 9.375 10 9.375C9.75186 9.375 9.51388 9.47357 9.33841 9.64904C9.16295 9.8245 9.06437 10.0625 9.06437 10.3106C9.06437 10.5588 9.16295 10.7967 9.33841 10.9722C9.51388 11.1477 9.75186 11.2463 10 11.2463ZM10.9362 13.4362C10.9362 13.6844 10.8377 13.9224 10.6622 14.0978C10.4867 14.2733 10.2488 14.3719 10.0006 14.3719C9.75248 14.3719 9.5145 14.2733 9.33904 14.0978C9.16357 13.9224 9.065 13.6844 9.065 13.4362C9.065 13.1881 9.16357 12.9501 9.33904 12.7747C9.5145 12.5992 9.75248 12.5006 10.0006 12.5006C10.2488 12.5006 10.4867 12.5992 10.6622 12.7747C10.8377 12.9501 10.9362 13.1881 10.9362 13.4362ZM13.4362 11.2463C13.6844 11.2463 13.9224 11.1477 14.0978 10.9722C14.2733 10.7967 14.3719 10.5588 14.3719 10.3106C14.3719 10.0625 14.2733 9.8245 14.0978 9.64904C13.9224 9.47357 13.6844 9.375 13.4362 9.375C13.1881 9.375 12.9501 9.47357 12.7747 9.64904C12.5992 9.8245 12.5006 10.0625 12.5006 10.3106C12.5006 10.5588 12.5992 10.7967 12.7747 10.9722C12.9501 11.1477 13.1881 11.2463 13.4362 11.2463ZM17.5 5.625C17.5 4.7962 17.1708 4.00134 16.5847 3.41529C15.9987 2.82924 15.2038 2.5 14.375 2.5H5.625C4.7962 2.5 4.00134 2.82924 3.41529 3.41529C2.82924 4.00134 2.5 4.7962 2.5 5.625V14.375C2.5 15.2038 2.82924 15.9987 3.41529 16.5847C4.00134 17.1708 4.7962 17.5 5.625 17.5H14.375C15.2038 17.5 15.9987 17.1708 16.5847 16.5847C17.1708 15.9987 17.5 15.2038 17.5 14.375V5.625ZM3.75 7.5H16.25V14.375C16.25 14.8723 16.0525 15.3492 15.7008 15.7008C15.3492 16.0525 14.8723 16.25 14.375 16.25H5.625C5.12772 16.25 4.65081 16.0525 4.29917 15.7008C3.94754 15.3492 3.75 14.8723 3.75 14.375V7.5ZM5.625 3.75H14.375C14.8723 3.75 15.3492 3.94754 15.7008 4.29917C16.0525 4.65081 16.25 5.12772 16.25 5.625V6.25H3.75V5.625C3.75 5.12772 3.94754 4.65081 4.29917 4.29917C4.65081 3.94754 5.12772 3.75 5.625 3.75Z"
      fill="#8699BD"
    />
  </svg>
  );
};

export const EyeOpenIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    xmlns="http://www.w3.org/2000/svg"
    width={16}
    height={16}
    fill="none"
    {...props}
  >
    <g
      stroke="#656565"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      clipPath="url(#a)"
    >
      <path d="M.667 8S3.333 2.667 8 2.667 15.333 8 15.333 8 12.667 13.333 8 13.333.667 8 .667 8Z" />
      <path d="M8 10a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z" />
    </g>
    <defs>
      <clipPath id="a">
        <path fill="#fff" d="M0 0h16v16H0z" />
      </clipPath>
    </defs>
  </svg>
  );
};
export const EyeCloseIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    xmlns="http://www.w3.org/2000/svg"
    width={16}
    height={16}
    fill="none"
    {...props}
  >
    <g
      stroke="#656565"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
      clipPath="url(#a)"
    >
      <path d="M11.96 11.96A6.713 6.713 0 0 1 8 13.333C3.333 13.333.667 8 .667 8A12.3 12.3 0 0 1 4.04 4.04M6.6 2.827a6.08 6.08 0 0 1 1.4-.16C12.667 2.667 15.333 8 15.333 8c-.404.757-.887 1.47-1.44 2.127m-4.48-.714a2 2 0 1 1-2.826-2.826M.667.667l14.666 14.666" />
    </g>
    <defs>
      <clipPath id="a">
        <path fill="#fff" d="M0 0h16v16H0z" />
      </clipPath>
    </defs>
  </svg>
  );
};
export const ShareIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    width={20}
    height={20}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M11.875 4.58309C11.8751 3.95033 12.0967 3.33756 12.5014 2.85114C12.9061 2.36472 13.4683 2.03536 14.0905 1.92022C14.7127 1.80508 15.3556 1.91143 15.9076 2.22081C16.4595 2.53019 16.8857 3.02308 17.1122 3.61391C17.3387 4.20475 17.3512 4.85624 17.1475 5.45531C16.9437 6.05437 16.5367 6.5632 15.997 6.89347C15.4572 7.22375 14.8189 7.35461 14.1928 7.26336C13.5666 7.17211 12.9922 6.8645 12.5692 6.39392L10.305 7.62892L7.77167 9.07642C8.12585 9.6998 8.21873 10.4381 8.03001 11.1298L12.5692 13.6056C13.0133 13.1122 13.6231 12.7991 14.2829 12.7257C14.9426 12.6523 15.6063 12.8238 16.148 13.2076C16.6896 13.5914 17.0715 14.1607 17.221 14.8075C17.3705 15.4543 17.2772 16.1334 16.9589 16.716C16.6407 17.2985 16.1195 17.7439 15.4945 17.9675C14.8695 18.1911 14.1841 18.1774 13.5685 17.9289C12.9529 17.6804 12.45 17.2145 12.1554 16.6197C11.8607 16.0249 11.7947 15.3425 11.97 14.7023L7.43084 12.2273C7.0849 12.612 6.63598 12.8896 6.13721 13.0273C5.63843 13.1649 5.11067 13.1568 4.61637 13.0038C4.12206 12.8509 3.68191 12.5596 3.34799 12.1643C3.01407 11.7691 2.80036 11.2865 2.73214 10.7736C2.66392 10.2607 2.74405 9.73897 2.96305 9.27018C3.18205 8.8014 3.53075 8.40516 3.96789 8.12834C4.40503 7.85153 4.91232 7.70573 5.42973 7.70819C5.94714 7.71066 6.45302 7.86129 6.88751 8.14225L9.69584 6.53725L11.97 5.29642C11.9068 5.06392 11.8748 4.82403 11.875 4.58309ZM14.5833 3.12475C14.1966 3.12475 13.8256 3.2784 13.5521 3.55189C13.2787 3.82538 13.125 4.19631 13.125 4.58309C13.125 4.96986 13.2787 5.34079 13.5521 5.61428C13.8256 5.88777 14.1966 6.04142 14.5833 6.04142C14.9701 6.04142 15.341 5.88777 15.6145 5.61428C15.888 5.34079 16.0417 4.96986 16.0417 4.58309C16.0417 4.19631 15.888 3.82538 15.6145 3.55189C15.341 3.2784 14.9701 3.12475 14.5833 3.12475ZM5.41667 8.95809C5.0299 8.95809 4.65897 9.11173 4.38548 9.38522C4.11199 9.65871 3.95834 10.0296 3.95834 10.4164C3.95834 10.8032 4.11199 11.1741 4.38548 11.4476C4.65897 11.7211 5.0299 11.8748 5.41667 11.8748C5.80345 11.8748 6.17438 11.7211 6.44787 11.4476C6.72136 11.1741 6.87501 10.8032 6.87501 10.4164C6.87501 10.0296 6.72136 9.65871 6.44787 9.38522C6.17438 9.11173 5.80345 8.95809 5.41667 8.95809ZM13.125 15.4164C13.125 15.0296 13.2787 14.6587 13.5521 14.3852C13.8256 14.1117 14.1966 13.9581 14.5833 13.9581C14.9701 13.9581 15.341 14.1117 15.6145 14.3852C15.888 14.6587 16.0417 15.0296 16.0417 15.4164C16.0417 15.8032 15.888 16.1741 15.6145 16.4476C15.341 16.7211 14.9701 16.8748 14.5833 16.8748C14.1966 16.8748 13.8256 16.7211 13.5521 16.4476C13.2787 16.1741 13.125 15.8032 13.125 15.4164Z"
      fill="#464F60"
    />
  </svg>
  );
};
export const DownloadIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    width={20}
    height={20}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M15.1833 17.2917H4.81662C4.52763 17.2799 4.2438 17.2112 3.98138 17.0896C3.71895 16.968 3.48308 16.7959 3.28725 16.583C3.09143 16.3702 2.93949 16.1208 2.84015 15.8492C2.7408 15.5775 2.69599 15.289 2.70829 15V12.5C2.70829 12.3342 2.77413 12.1753 2.89134 12.0581C3.00855 11.9408 3.16753 11.875 3.33329 11.875C3.49905 11.875 3.65802 11.9408 3.77523 12.0581C3.89244 12.1753 3.95829 12.3342 3.95829 12.5V15C3.93677 15.2474 4.01132 15.4937 4.16648 15.6876C4.32164 15.8816 4.54549 16.0083 4.79162 16.0417H15.1833C15.4294 16.0083 15.6533 15.8816 15.8084 15.6876C15.9636 15.4937 16.0381 15.2474 16.0166 15V12.5C16.0166 12.3342 16.0825 12.1753 16.1997 12.0581C16.3169 11.9408 16.4759 11.875 16.6416 11.875C16.8074 11.875 16.9664 11.9408 17.0836 12.0581C17.2008 12.1753 17.2666 12.3342 17.2666 12.5V15C17.2916 15.5795 17.0867 16.1454 16.6965 16.5745C16.3064 17.0037 15.7625 17.2614 15.1833 17.2917Z"
      fill="#464F60"
    />
    <path
      d="M9.99999 13.1244C9.91788 13.1248 9.83651 13.1088 9.76067 13.0773C9.68482 13.0458 9.61603 12.9995 9.55833 12.9411L6.22499 9.60772C6.11459 9.48924 6.05449 9.33253 6.05735 9.17062C6.06021 9.0087 6.1258 8.85421 6.24031 8.7397C6.35482 8.62519 6.50931 8.55959 6.67123 8.55674C6.83314 8.55388 6.98985 8.61398 7.10833 8.72438L9.99999 11.6161L12.8917 8.72438C13.0101 8.61398 13.1668 8.55388 13.3288 8.55674C13.4907 8.55959 13.6452 8.62519 13.7597 8.7397C13.8742 8.85421 13.9398 9.0087 13.9426 9.17062C13.9455 9.33253 13.8854 9.48924 13.775 9.60772L10.4417 12.9411C10.384 12.9995 10.3152 13.0458 10.2393 13.0773C10.1635 13.1088 10.0821 13.1248 9.99999 13.1244Z"
      fill="#464F60"
    />
    <path
      d="M10 13.1257C9.83491 13.1235 9.67719 13.057 9.56045 12.9402C9.4437 12.8235 9.37716 12.6657 9.375 12.5007V3.33398C9.375 3.16822 9.44085 3.00925 9.55806 2.89204C9.67527 2.77483 9.83424 2.70898 10 2.70898C10.1658 2.70898 10.3247 2.77483 10.4419 2.89204C10.5592 3.00925 10.625 3.16822 10.625 3.33398V12.5007C10.6228 12.6657 10.5563 12.8235 10.4396 12.9402C10.3228 13.057 10.1651 13.1235 10 13.1257Z"
      fill="#464F60"
    />
  </svg>
  );
};
export const PrintIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    width={20}
    height={20}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M5 7.49935V1.66602H15V7.49935"
      stroke="#464F60"
      strokeWidth={1.2}
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M5.00033 15H3.33366C2.89163 15 2.46771 14.8244 2.15515 14.5118C1.84259 14.1993 1.66699 13.7754 1.66699 13.3333V9.16667C1.66699 8.72464 1.84259 8.30072 2.15515 7.98816C2.46771 7.6756 2.89163 7.5 3.33366 7.5H16.667C17.109 7.5 17.5329 7.6756 17.8455 7.98816C18.1581 8.30072 18.3337 8.72464 18.3337 9.16667V13.3333C18.3337 13.7754 18.1581 14.1993 17.8455 14.5118C17.5329 14.8244 17.109 15 16.667 15H15.0003"
      stroke="#464F60"
      strokeWidth={1.2}
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M15 11.666H5V18.3327H15V11.666Z"
      stroke="#464F60"
      strokeWidth={1.2}
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
  );
};
export const CalendarWhiteIcon = (
  props: React.SVGProps<SVGSVGElement> & { fill?: string },
) => {
  return (
    <svg
    xmlns="http://www.w3.org/2000/svg"
    width={20}
    height={20}
    fill="none"
    {...props}
  >
    <path
      fill="#fff"
      d="M6.56 11.246a.936.936 0 1 0 0-1.87.936.936 0 0 0 0 1.87Zm.936 2.19a.935.935 0 1 1-1.87 0 .935.935 0 0 1 1.87 0ZM10 11.246a.936.936 0 1 0 0-1.871.936.936 0 0 0 0 1.871Zm.936 2.19a.935.935 0 1 1-1.87 0 .935.935 0 0 1 1.87 0Zm2.5-2.19a.935.935 0 1 0 0-1.87.935.935 0 0 0 0 1.87ZM17.5 5.625A3.125 3.125 0 0 0 14.375 2.5h-8.75A3.125 3.125 0 0 0 2.5 5.625v8.75A3.125 3.125 0 0 0 5.625 17.5h8.75a3.125 3.125 0 0 0 3.125-3.125v-8.75ZM3.75 7.5h12.5v6.875a1.875 1.875 0 0 1-1.875 1.875h-8.75a1.875 1.875 0 0 1-1.875-1.875V7.5Zm1.875-3.75h8.75a1.875 1.875 0 0 1 1.875 1.875v.625H3.75v-.625A1.875 1.875 0 0 1 5.625 3.75Z"
    />
  </svg>
  );
};
